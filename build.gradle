plugins {
    id 'com.enonic.defaults' version '2.0.1' apply false
    id 'com.enonic.xp.app' version '3.2.0' apply false
    id 'com.enonic.xp.base' version '3.2.0' apply false
    id 'com.github.node-gradle.node' version '3.4.0' apply false
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.aim42.htmlSanityCheck' version '1.1.6'
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.enonic.defaults'
    apply plugin: 'com.enonic.xp.base'
    apply from: "$rootDir/gradle/env.gradle"
    apply from: "$rootDir/gradle/node.gradle"
    apply from: "$rootDir/gradle/lib-admin.gradle"

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
        testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.0"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"
        testImplementation "org.mockito:mockito-core:4.6.1"
        testImplementation "org.mockito:mockito-junit-jupiter:4.6.1"
        testImplementation "org.assertj:assertj-core:3.23.1"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        xp.enonicRepo('dev')
    }

    test {
        useJUnitPlatform()
    }
}

asciidoctor {
    sourceDir = file('docs')
    outputDir = file('build/docs')
    attributes 'source-highlighter': 'coderay',
               idseparator: '-'

    resources {
        from(sourceDir) {
            include '**/images/**'
            include '**/code/**'
            include '**/*.*'
        }
    }
}

htmlSanityCheck {
    dependsOn asciidoctor
    sourceDir = tasks.asciidoctor.outputDir

    sourceDocuments = fileTree(sourceDir) {
        include "index.html"
    }

    // where to put results of sanityChecks...
    checkingResultsDir = new File( "$buildDir/report/htmlchecks" )
    //checkExternalLinks = false

    // fail build on errors?
    failOnErrors = true
}

build.enabled = false
