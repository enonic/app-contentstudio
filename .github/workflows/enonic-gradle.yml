name: Gradle Build

on: [ push ]

jobs:
    build:

        runs-on: ubuntu-latest

        needs: release_notes

        if: always()
        steps:
            -   uses: actions/checkout@v2.3.4

            -   uses: actions/setup-java@v1
                with:
                    java-version: 11

            -   uses: actions/cache@v2.1.4
                with:
                    path: ~/.gradle/caches
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   run: ./gradlew build -Pcom.enonic.xp.app.production=true

            -   uses: codecov/codecov-action@v1.3.1

            ### PUBLISHING STEPS ###

            -   name: Get publishing variables
                id: publish_vars
                uses: enonic/release-tools/publish-vars@master
                env:
                    PROPERTIES_PATH: './gradle.properties'
                    JAVA_HOME: ''

            -   name: Fail on bad config
                if: steps.publish_vars.outputs.version == '' || steps.publish_vars.outputs.projectName == ''
                run: exit 1

            -   name: Publish
                if: github.ref == 'refs/heads/master' || contains(github.ref, 'refs/heads/3.')
                run: ./gradlew -Pcom.enonic.xp.app.production=true publish -PrepoKey=${{ steps.publish_vars.outputs.repo }} -PrepoUser=${{ secrets.ARTIFACTORY_USERNAME }} -PrepoPassword=${{ secrets.ARTIFACTORY_PASSWORD }}

            -   name: Download changelog
                if: steps.publish_vars.outputs.release == 'true'
                uses: actions/download-artifact@v2
                with:
                    name: changelog

            -   name: Create Release
                if: steps.publish_vars.outputs.release == 'true'
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: ${{ steps.publish_vars.outputs.tag_name }}
                    body_path: changelog.md
                    prerelease: ${{ steps.publish_vars.outputs.prerelease == 'true' }}

            -   name: Upload Release Asset
                id: upload-release-asset
                if: "steps.create_release.outputs.upload_url != ''"
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: "modules/app/build/libs/${{ steps.publish_vars.outputs.projectName }}-${{ steps.publish_vars.outputs.version }}.jar"
                    asset_name: "${{ steps.publish_vars.outputs.projectName }}-${{ steps.publish_vars.outputs.version }}.jar"
                    asset_content_type: application/java-archive

            -   name: Write new snapshot version
                if: steps.publish_vars.outputs.release == 'true'
                uses: christian-draeger/write-properties@1.0.1
                with:
                    path: './gradle.properties'
                    property: 'version'
                    value: ${{ steps.publish_vars.outputs.nextSnapshot }}

            -   name: Commit and push new version
                if: steps.publish_vars.outputs.release == 'true'
                uses: EndBug/add-and-commit@v7.1.0
                with:
                    add: ./gradle.properties
                    message: 'Updated to next SNAPSHOT version'
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    release_notes:
        runs-on: ubuntu-latest
        if: "(github.ref == 'refs/heads/master')"
        steps:
            -   uses: actions/checkout@v2.3.4
                with:
                    fetch-depth: 0

            -   name: Get previous release tag
                id: get_previous_release_tag
                run: |
                    PREVIOUS_RELEASE_TAG=$(git tag --sort=-version:refname --merged | grep -E '^v([[:digit:]]+\.){2}[[:digit:]]+$' | head -1)
                    echo ::set-output name=previous_release_tag::$PREVIOUS_RELEASE_TAG

            -   name: Generate Release Notes
                uses: enonic/release-tools/generate-changelog@master
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    ZENHUB_TOKEN: ${{ secrets.ZENHUB_TOKEN }}
                    PREVIOS_RELEASE_TAG: ${{ steps.get_previous_release_tag.outputs.previous_release_tag }}
                    OUTPUT_FILE: changelog.md

            -   uses: actions/upload-artifact@v2
                with:
                    name: changelog
                    path: changelog.md
