name: Gradle Build

on:
    push:
    repository_dispatch:
        types: [ lib-admin-ui ]

concurrency: build-${{ github.ref }}

jobs:
    publish_vars:
        runs-on: ubuntu-latest

        outputs:
            publish: ${{ steps.publish_vars.outputs.release != 'true' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/5.')) }}
            repo: ${{ steps.publish_vars.outputs.repo }}

        steps:

            -   uses: actions/checkout@v4

            -   name: Get publishing variables
                id: publish_vars
                uses: enonic/release-tools/publish-vars@master
                env:
                    PROPERTIES_PATH: './gradle.properties'

    build:
        runs-on: ubuntu-latest

        needs: publish_vars

        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK 11
              uses: actions/setup-java@v4
              with:
                java-version: 11
                distribution: 'temurin'

            -   uses: actions/cache@v4
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Build with Gradle
                run: ./gradlew build -Pcom.enonic.xp.app.production=true

            -   uses: actions/upload-artifact@v4
                with:
                    name: contentstudio
                    path: modules/app/build/libs/contentstudio.jar

            -   uses: codecov/codecov-action@v3

            -   name: Publish
                if: needs.publish_vars.outputs.publish == 'true'
                run: ./gradlew publish -Pcom.enonic.xp.app.production=true -PrepoKey=${{ needs.publish_vars.outputs.repo }} -PrepoUser=${{ secrets.ARTIFACTORY_USERNAME }} -PrepoPassword=${{ secrets.ARTIFACTORY_PASSWORD }}

    selenium-test:
        strategy:
            fail-fast: false
            matrix:
                suite: [ w_testProjects, w_testProjects_2, w_testPageEditor, w_testInputTypes, w_testInputTypes_2, w_testWizardsGrid, w_testPublishIssues, w_testModalDialog, w_testHiddenDefProject, testProjects_multi ]

        runs-on: ubuntu-latest

        needs: build

        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK 11
              uses: actions/setup-java@v4
              with:
                java-version: 11
                distribution: 'temurin'

            - uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            - run: |
                  set -ex

            - uses: actions/download-artifact@v4
              with:
                  name: contentstudio
                  path: modules/app/build/libs

            - name: Run Selenium Tests
              run: ./gradlew :testing:${{ matrix.suite }}

            - name: Slack Notification
              uses: rtCamp/action-slack-notify@v2
              if: failure()
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                  SLACK_CHANNEL: notif-build-tests
                  SLACK_USERNAME: GitHub Actions
                  SLACK_TITLE: GitHub Action Failure in Content Studio app ${{ matrix.suite }}
                  SLACK_MESSAGE: ${{job.container.id}}
                  SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
                  SLACK_COLOR: ${{ job.status }}

            - uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: 'ui-test-report-${{ matrix.suite }}'
                  path: |
                      testing/build/reports
