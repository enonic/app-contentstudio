apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.enonic.defaults'
apply plugin: 'com.enonic.xp.app'

archivesBaseName = 'contentstudio'

app {
    name = 'com.enonic.app.contentstudio'
    group = 'com.enonic.app'
    displayName = 'Content Studio'
    systemVersion = "${xpVersion}"
    vendorName = 'Enonic AS'
    vendorUrl = 'https://enonic.com'
    devSourcePaths += file( "$rootDir/../lib-admin-ui/src/main/resources" )
    devSourcePaths += file( "../lib/src/main/resources" )
}

configurations {
    devResources {
        attributes {
            attribute( LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named( LibraryElements, 'dev-resources' ) )
        }
    }
}

dependencies {
    implementation "com.enonic.xp:core-api:${xpVersion}"
    implementation "com.enonic.xp:admin-api:${xpVersion}"
    implementation "com.enonic.xp:portal-api:${xpVersion}"

    include "org.apache.commons:commons-text:1.10.0"
    include "com.enonic.xp:lib-admin:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-project:${xpVersion}"
    include "com.enonic.lib:lib-text-encoding:2.1.1"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-grid:${xpVersion}"
    include "com.enonic.xp:lib-event:${xpVersion}"
    include "com.enonic.xp:lib-app:${xpVersion}"
    include "com.enonic.xp:lib-schema:${xpVersion}"
    include "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
    include "com.enonic.lib:lib-mustache:2.1.0"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.lib:lib-license:3.0.1"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    include project( ':lib-contentstudio' )
    include project( ':rest' )
    devResources project( path: ':lib-contentstudio', configuration: 'devResources' )
    devResources "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
}

afterEvaluate {
    copyDevResources.dependsOn ':lib-contentstudio:devJar'
}


task lint( type: NpmTask, group: "verification", dependsOn: npmInstall ) {
    args = ['run', 'lint']
    outputs.upToDateWhen { false }
}

check.dependsOn lint

task webpack( type: NpmTask, dependsOn: npmInstall ) {
    environment = ['NODE_ENV': nodeEnvironment()]
    description = 'Build UI resources (ts, css, etc).'
    args = ['run', 'build']
    inputs.dir '.xp/dev'
    inputs.dir 'src/main/resources/assets'
    inputs.file 'webpack.config.js'
    outputs.dir "$buildDir/build/resources/main/assets"
}

jar {
    exclude 'assets/**/*.ts'
    exclude 'assets/**/*.less'
    exclude 'assets/styles/*.js'
    exclude 'assets/page-editor/styles/*.js'
    exclude 'assets/page-editor/lib/_include.js'
    exclude 'assets/page-editor/lib/jquery*.js'
    exclude 'assets/icons/*.txt'
    exclude 'assets/styles/widgets/*.js'

    if ( isProd() )
    {
        exclude 'assets/**/*.map'
    }

    outputs.dir "$buildDir/resources/main"

    dependsOn += test
    dependsOn += webpack
}

