apply plugin: 'maven-publish'

group = 'com.enonic.lib'
archivesBaseName = 'lib-contentstudio'

configurations {
    devResources {
        attributes {
            attribute( LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named( LibraryElements, 'dev-resources' ) )
        }
    }
}

dependencies {
    devResources "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
}

task lint( type: NpmTask, group: "verification", dependsOn: npmInstall ) {
    args = ['run', 'lint']
    outputs.upToDateWhen { false }
}

check.dependsOn lint

task typescript( type: NpmTask, dependsOn: npmInstall ) {
    description = 'Build JS and DTS'
    def buildEnv = isProd() ? 'prod' : 'dev'
    environment = ['NODE_ENV': nodeEnvironment()]
    args = ['run', "build:$buildEnv"]
    inputs.dir "$projectDir/src/main/resources/assets/"
    outputs.dirs( "$buildDir/tmp/src/main/resources/assets/js/",
                  "$buildDir/resources/main/assets/",
                  "$buildDir/resources/main/dev/$archivesBaseName" )
}

task copyJS( type: Copy, dependsOn: typescript ) {
    if ( !isProd() )
    {
        from "$buildDir/tmp/src/main/resources/assets/js/"
        into "$buildDir/resources/main/dev/$archivesBaseName"
        includeEmptyDirs false
    }
    inputs.dir "$buildDir/tmp/src/main/resources/assets/js/"
    outputs.dir "$buildDir/resources/main/dev/$archivesBaseName"
}

task copyPackage( type: NodeTask, dependsOn: typescript ) {
    script = file( 'util/modify.js' )
    args = ["--out=$buildDir/resources/main/dev/$archivesBaseName"]
    inputs.file "./package.json"
    outputs.file "$buildDir/resources/main/dev/$archivesBaseName/package.json"
}

task devJar( type: Jar ) {
    archiveClassifier = 'dev-resources'
    from sourceSets.main.output
    include 'dev/**'
    includeEmptyDirs false
    dependsOn copyJS
    dependsOn copyPackage
}

jar {
    exclude 'admin/**'
    exclude 'assets/js/**'
    exclude 'assets/lib/ckeditor/**/*.md'
    exclude 'assets/lib/ckepath.js'
    exclude 'assets/lib/ckeditor/build-config.js'
    exclude 'assets/lib/ckeditor/ckeditor.js'
    exclude 'assets/icons/**'
    exclude 'assets/styles/**/*.less'
    exclude 'com/**'
    exclude 'i18n/**/common*'
    exclude 'lib/**'
    exclude 'services/**'
    exclude 'application.svg'
    exclude 'application.xml'
    exclude 'dev/**'

    includeEmptyDirs = false

    dependsOn devJar
}

artifacts {
    devResources devJar
}

components.java.addVariantsFromConfiguration( configurations.devResources ) {}
