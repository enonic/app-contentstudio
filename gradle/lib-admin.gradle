def isLibAdminUiIncluded()
{
    return new File( "$rootDir/../lib-admin-ui" ).exists()
}

def hasLibAdminUi()
{
    return hasEnvironment() && isLibAdminUiIncluded()
}

def hasTask( name )
{
    return project.tasks.findByName( name ) != null
}

def applyExcludedTasks()
{
    def excludedTasks = gradle.startParameter.getExcludedTaskNames().findAll( { it == 'lint' || it == 'test' } )

    gradle.includedBuild( 'lib-admin-ui' ).getLoadedSettings().getStartParameter().setExcludedTaskNames( excludedTasks )
}

if ( hasLibAdminUi() )
{
    applyExcludedTasks()
}

ext {
    hasLibAdminUi = this.&hasLibAdminUi
}

if ( hasTask( 'clean' ) )
{
    task flush( type: Delete, dependsOn: clean ) {
        description = 'Clean the project from built sources and dependencies'
        delete '.xp'
    }
}
